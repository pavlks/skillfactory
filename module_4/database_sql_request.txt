SELECT count(t.*), f.arrival_airport, a.city, EXTRACT ('month' FROM scheduled_departure) as month
FROM dst_project.flights AS f
    LEFT JOIN dst_project.ticket_flights AS t ON t.flight_id = f.flight_id
    LEFT JOIN dst_project.airports AS a ON a.airport_code = f.arrival_airport

WHERE departure_airport = 'AAQ'
    AND (date_trunc('month', f.scheduled_departure) IN ('2017-01-01','2017-02-01', '2016-12-01'))
    AND f.status NOT IN ('Cancelled')
GROUP BY 2, 3, 4


WITH base AS
  (
SELECT distinct
		f.flight_id,
                    ac.model,
                    ac.aircraft_code,
                    f.arrival_airport,
                    sum(tf.amount) OVER (PARTITION BY tf.flight_id) AS paid,
                    count(tf.amount) OVER (PARTITION BY tf.flight_id) AS total_passengers,
			(CASE WHEN ac.aircraft_code = '733' THEN 130 ELSE 97 END) AS total_seats,
                    acos(sin(pi()*apd.latitude/180) * sin(pi()*apa.latitude/180) + cos(pi()*apd.latitude/180) * cos(pi()*apa.latitude/180) * cos(pi()*(apd.longitude - apa.longitude)/180)) * 6371 AS km,
                    EXTRACT ('hour' FROM f.actual_arrival - f.actual_departure) + EXTRACT ('minute' FROM f.actual_arrival - f.actual_departure) / 60 * 53.05 * (CASE WHEN ac.aircraft_code = '733' THEN 2400 ELSE 1700 END) AS fuel_expence,
                    EXTRACT ('month' FROM f.actual_departure) AS month, 
			EXTRACT ('hour' FROM f.actual_arrival - f.actual_departure) * 60 + EXTRACT ('minute' FROM f.actual_arrival - f.actual_departure) AS duration,
                    actual_departure::date,
                    apa.city AS destination, 
apd.city as origin


FROM dst_project.flights f
   LEFT JOIN dst_project.ticket_flights AS tf ON tf.flight_id = f.flight_id
   LEFT JOIN dst_project.aircrafts AS ac ON ac.aircraft_code = f.aircraft_code
   LEFT JOIN dst_project.airports AS apd ON apd.airport_code = f.departure_airport
   LEFT JOIN dst_project.airports AS apa ON apa.airport_code = f.arrival_airport
WHERE f.departure_airport = 'AAQ'
  AND (date_trunc('month', f.scheduled_departure) in ('2017-01-01','2017-02-01', '2016-12-01'))
  AND f.status not in ('Cancelled'))

SELECT flight_id, origin, destination, duration, model, total_passengers, total_seats, fuel_expence, paid, (paid - fuel_expence) as income, actual_departure, (paid - fuel_expence) / km as km_price
FROM base
ORDER BY 6, 2
;


/*
Команда для сохранения данных в файл

\copy (SELECT statement) to 'flights.csv' with csv

*/